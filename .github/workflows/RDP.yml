name: RDP

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-2019

    steps:
    - name: step 1
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: step 2
      run: Invoke-WebRequest https://github.com/kinguser981/Personal_files/releases/download/11312652930/RDP_TOOL_2024.zip -OutFile RDP_TOOL_2024.zip
    - name: step 3
      run: Invoke-WebRequest https://github.com/kinguser981/set-wallpaper-powershell/blob/main/setwallpaper.ps1 -OutFile setwallpaper.ps1
    - name: step 4
      run: Invoke-WebRequest https://github.com/kinguser981/Personal_files/releases/download/11312652930/test1.reg -OutFile test1.reg
    - name: step 5
      run: Invoke-WebRequest https://github.com/kinguser981/Personal_files/releases/download/11312652930/test2.reg -OutFile test2.reg
    - name: step 6
      run: Invoke-WebRequest https://github.com/kinguser981/Personal_files/releases/download/11312652930/my_edit.jpg -OutFile c:\my_edit.jpg
        $setwallpapersrc = @"using System.Runtime.InteropServices;
        public class Wallpaper
        {
        public const int SetDesktopWallpaper = 20;
        public const int UpdateIniFile = 0x01;
        public const int SendWinIniChange = 0x02;
        [DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Auto)]
        private static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
        public static void SetWallpaper(string path)
        {
          SystemParametersInfo(SetDesktopWallpaper, 0, path, UpdateIniFile | SendWinIniChange);
        }
        }
        "@
        Add-Type -TypeDefinition $setwallpapersrc

        [Wallpaper]::SetWallpaper("C:\my_edit.jpg")
    - name: step 7
      run: reg import .\test1.reg
    - name: step 8
      run: reg import .\test2.reg
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".tif" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".tiff" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".bmp" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".gif" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".jpg" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".jpeg" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".png" -Value "PhotoViewer.FileAssoc.Tiff"
    - run: Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations' -Name ".psd" -Value "PhotoViewer.FileAssoc.Tiff"
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
